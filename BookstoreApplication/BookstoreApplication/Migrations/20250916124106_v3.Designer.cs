// <auto-generated />
using System;
using BookstoreApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookstoreApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250916124106_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Birthday");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "British crime novelist known for detective stories",
                            DateOfBirth = new DateTime(1890, 9, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Agatha Christie"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "American author of horror and supernatural fiction",
                            DateOfBirth = new DateTime(1947, 9, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Stephen King"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "British author best known for the Harry Potter series",
                            DateOfBirth = new DateTime(1965, 7, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "J.K. Rowling"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "English novelist and essayist",
                            DateOfBirth = new DateTime(1903, 6, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "George Orwell"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "American novelist known for To Kill a Mockingbird",
                            DateOfBirth = new DateTime(1926, 4, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Harper Lee"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("AwardId")
                        .HasColumnType("integer");

                    b.Property<int>("YearAwarded")
                        .HasColumnType("integer");

                    b.HasKey("AuthorId", "AwardId");

                    b.HasIndex("AwardId");

                    b.ToTable("AuthorAwardBridge", (string)null);

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AwardId = 2,
                            YearAwarded = 1955
                        },
                        new
                        {
                            AuthorId = 1,
                            AwardId = 3,
                            YearAwarded = 1956
                        },
                        new
                        {
                            AuthorId = 1,
                            AwardId = 4,
                            YearAwarded = 1962
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 1,
                            YearAwarded = 1982
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 2,
                            YearAwarded = 2009
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 3,
                            YearAwarded = 1996
                        },
                        new
                        {
                            AuthorId = 2,
                            AwardId = 4,
                            YearAwarded = 2015
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 1,
                            YearAwarded = 2001
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 2,
                            YearAwarded = 2004
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 3,
                            YearAwarded = 2017
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 1,
                            YearAwarded = 1984
                        },
                        new
                        {
                            AuthorId = 4,
                            AwardId = 2,
                            YearAwarded = 1949
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 3,
                            YearAwarded = 1961
                        },
                        new
                        {
                            AuthorId = 5,
                            AwardId = 4,
                            YearAwarded = 1961
                        },
                        new
                        {
                            AuthorId = 3,
                            AwardId = 4,
                            YearAwarded = 1971
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StartYear")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Awards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Award for best science fiction or fantasy works",
                            Name = "Hugo Award",
                            StartYear = 1953
                        },
                        new
                        {
                            Id = 2,
                            Description = "Award for outstanding work in mystery genre",
                            Name = "Edgar Award",
                            StartYear = 1946
                        },
                        new
                        {
                            Id = 3,
                            Description = "Award for distinguished fiction",
                            Name = "Pulitzer Prize",
                            StartYear = 1918
                        },
                        new
                        {
                            Id = 4,
                            Description = "Award by Science Fiction Writers of America",
                            Name = "Nebula Award",
                            StartYear = 1965
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "978-0-00-711930-6",
                            PageCount = 256,
                            PublishedDate = new DateTime(1934, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Murder on the Orient Express"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            ISBN = "978-0-00-711931-3",
                            PageCount = 272,
                            PublishedDate = new DateTime(1936, 1, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "The ABC Murders"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            ISBN = "978-0-00-711932-0",
                            PageCount = 288,
                            PublishedDate = new DateTime(1937, 11, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Death on the Nile"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "978-0-385-12167-5",
                            PageCount = 447,
                            PublishedDate = new DateTime(1977, 1, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "The Shining"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            ISBN = "978-0-670-81302-4",
                            PageCount = 1138,
                            PublishedDate = new DateTime(1986, 9, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "It"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 2,
                            ISBN = "978-0-385-08695-0",
                            PageCount = 199,
                            PublishedDate = new DateTime(1974, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Carrie"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            ISBN = "978-0-7475-3269-9",
                            PageCount = 223,
                            PublishedDate = new DateTime(1997, 6, 26, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Harry Potter and the Philosopher's Stone"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 3,
                            ISBN = "978-0-7475-3849-3",
                            PageCount = 251,
                            PublishedDate = new DateTime(1998, 7, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Harry Potter and the Chamber of Secrets"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 3,
                            ISBN = "978-0-7475-4215-5",
                            PageCount = 317,
                            PublishedDate = new DateTime(1999, 7, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Harry Potter and the Prisoner of Azkaban"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 4,
                            ISBN = "978-0-452-28423-4",
                            PageCount = 328,
                            PublishedDate = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "1984"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 4,
                            ISBN = "978-0-452-28424-1",
                            PageCount = 112,
                            PublishedDate = new DateTime(1945, 8, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Animal Farm"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 5,
                            ISBN = "978-0-06-112008-4",
                            PageCount = 376,
                            PublishedDate = new DateTime(1960, 7, 11, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "To Kill a Mockingbird"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1745 Broadway, New York, NY",
                            Name = "Penguin Random House",
                            Website = "https://www.penguinrandomhouse.com"
                        },
                        new
                        {
                            Id = 2,
                            Address = "195 Broadway, New York, NY",
                            Name = "HarperCollins",
                            Website = "https://www.harpercollins.com"
                        },
                        new
                        {
                            Id = 3,
                            Address = "1230 Avenue of the Americas, NY",
                            Name = "Simon & Schuster",
                            Website = "https://www.simonandschuster.com"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AuthorAward", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany("AuthorAwards")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Award", "Award")
                        .WithMany("AuthorAwards")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Award");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Navigation("AuthorAwards");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Navigation("AuthorAwards");
                });
#pragma warning restore 612, 618
        }
    }
}
